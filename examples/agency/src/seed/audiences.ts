import { KeystoneContext } from "@keystone-6/core/types";
import { JSONify } from "./common";

/**
 * Seeds audience data in the database.
 * - Identifies existing audiences by their names.
 * - Creates new audiences with unique names.
 * 
 * @param {KeystoneContext} context - KeystoneJS context object, providing access to the database.
 */
export default async function seedAudiences(context: KeystoneContext) {
  try {
    console.log(`ðŸ‘¥ Seeding audiences...`);

    // Use the sudo context to bypass access control
    const { db, query } = context.sudo();

    const alreadyInDatabase = await query.Audience.findMany({ query: "tags { title }"});

    // Function to check if two audiences have the same tags in the same order
    function areTagsEqual(tags1: { title: string }[], tags2: { title: string }[]): boolean {
      if (tags1.length !== tags2.length) {
        return false;
      }
    
      for (let i = 0; i < tags1.length; i++) {
        if (tags1[i].title !== tags2[i].title) {
          return false;
        }
      }
      return true;
    }

    // Determine which audiences need to be created by filtering out already existing ones
    const toCreate = Audiences.filter(
      (audience) => !alreadyInDatabase.some(x => areTagsEqual(audience.tags, x.tags))
    );

    const data = await Promise.all(toCreate.map(async (audience) => {
      const advertiser = await db.Advertiser.findOne({
        where: { title: audience.advertiser },
      })
      const dataSource = await db.TargetingDataSource.findOne({
        where: { title: audience.dataSource },
      })
      return {
        ...audience,
        advertiser: advertiser ? {
          connect: {
            id: advertiser.id.toString()
          }
        } : undefined,
        dataSource: dataSource ? {
          connect: {
            id: dataSource.id.toString()
          }
        } : undefined,
      }
    }))

    // Create new audiences with the looked-up IDs
    await db.Audience.createMany({ data });

    console.log(`ðŸ‘¥ Seeding audiences completed.`);
  } catch (error) {
    // Log error if seeding audiences fails
    console.error('ðŸš¨ðŸ‘¥ Error seeding audiences:', error);
  }
}

const Audiences = [
  {
    advertiser: 'Alpha Advertising',
    status: true,
    tags: [{ title: 'Technology' }, { title: 'Innovation' }],
    rebuild: 1,
    rebuildUnit: 'weeks',
    dataSource: 'Sales Data',
    dataFilter: JSONify({
      and: [
        { "==": [{ var: "client" }, "RTB???"] },
        { ">=": [{ var: "date" }, { date_add: [{ now: [] }, -45, "days"] }] },
        { "==": [{ var: "state" }, "KY"] },
      ],
    }),
    meta: 'meta1',
  },
  {
    advertiser: 'Beta Branding',
    status: false,
    tags: [{ title: 'Health' }, { title: 'Wellness' }],
    rebuild: 1,
    rebuildUnit: 'months',
    dataSource: 'Residential Addresses',
    dataFilter: JSONify({
      and: [
        {
          in: [
            { var: "zipCode" },
            [
              "04210",
              "04212",
              "04211",
              "04241",
              "04243",
              "04240",
              "04223",
              "04230",
              "04250",
              "04258",
              "04236",
              "04274",
              "04280",
              "04256",
              "04288",
              "04260",
              "04252",
              "04222",
              "04238",
              "04291",
              "04282",
              "04287",
              "04069",
              "04270",
              "04259",
              "04263",
              "04039",
              "04350",
              "04086",
              "04097",
              "04265",
              "04015",
              "04032",
              "04281",
              "04034",
              "04033",
              "04266",
              "04071",
              "04220",
              "04271",
              "04011",
              "04008",
              "04284",
              "04078",
              "04357",
              "04086",
              "04011",
              "04287",
              "04252",
              "04008",
              "04222",
              "04250",
              "04579",
              "04032",
              "04530",
              "04033",
              "04034",
              "04280",
              "04357",
              "04079",
              "04069",
              "04240",
              "04078",
              "04342",
              "04350",
              "04013",
              "04578",
              "04066",
              "04565",
              "04562",
              "04571",
              "04548",
              "04210",
              "04241",
              "04243",
              "04549",
              "04097",
              "04212",
              "04211",
              "04223",
              "04003",
              "04096",
              "04260",
              "04345",
              "04359",
              "04537",
              "04556",
              "04259",
              "04236",
              "04575",
              "04576",
              "04535",
              "04017",
              "04538",
              "04110",
              "04230",
              "04021",
              "04570",
              "04039",
              "04573",
              "04268",
              "04267",
              "04271",
              "04255",
              "04281",
              "04289",
              "04088",
              "04057",
              "04040",
              "04270",
              "04238",
              "04219",
              "04292",
              "04288",
              "04016",
              "04231",
              "04256",
              "04220",
              "04051",
              "04258",
              "04291",
              "04009",
              "04217",
              "04286",
              "04274",
              "04055",
              "04230",
              "04037",
              "04282",
              "04290",
              "04015",
              "04266",
              "04237",
              "04022",
              "04221",
              "04101",
              "04104",
              "04122",
              "04112",
              "04116",
              "04123",
              "04124",
              "04102",
              "04103",
              "04109",
              "04106",
              "04108",
              "04107",
              "04092",
              "04098",
              "04050",
              "04105",
              "04070",
              "04074",
              "04110",
              "04019",
              "04017",
              "04021",
              "04082",
              "04096",
              "04038",
              "04064",
              "04062",
              "04063",
              "04072",
              "04078",
              "04013",
              "04097",
              "04093",
              "04003",
              "04004",
              "04007",
              "04006",
              "04033",
              "04034",
              "04005",
              "04039",
              "04084",
              "04032",
              "04066",
              "04069",
              "04079",
              "04042",
              "04077",
              "04085",
              "04072",
              "04007",
              "04005",
              "04064",
              "04063",
              "04074",
              "04004",
              "04070",
              "04093",
              "04046",
              "04006",
              "04042",
              "04106",
              "04094",
              "04098",
              "04043",
              "04014",
              "04002",
              "04107",
              "04102",
              "04092",
              "04038",
              "04030",
              "04101",
              "04112",
              "04116",
              "04122",
              "04104",
              "04124",
              "04123",
              "04103",
              "04082",
              "04087",
              "04109",
              "04061",
              "04108",
              "04073",
              "04090",
              "04084",
              "04105",
              "04085",
              "04062",
              "04049",
              "04083",
              "04050",
              "04076",
              "04048",
              "04054",
              "04009",
              "04022",
              "04057",
              "04040",
              "04055",
              "04037",
              "04010",
              "04029",
              "04016",
              "04088",
              "04041",
              "04267",
              "04015",
              "04270",
              "04051",
              "04091",
              "04024",
              "04291",
              "03813",
              "04071",
              "04268",
              "04077",
              "04068",
              "03860",
              "04231",
              "03832",
              "04256",
              "04274",
              "03847",
              "04020",
              "03849",
              "04085",
              "04281",
              "03845",
              "04271",
              "04255",
            ],
          ],
        },
      ],
    }),
    meta: 'meta2',
    oneView: 'oneView2',
    xandr: 'xandr2',
  },
  {
    advertiser: 'Gamma Marketing',
    status: true,
    tags: [{ title: 'Finance' }, { title: 'Investment' }],
    rebuild: 30,
    rebuildUnit: 'days',
    dataSource: 'Movers Data',
    dataFilter: JSONify({
      and: [
        { ">=": [{ var: "date" }, { date_add: [{ now: [] }, -9, "month"] }] },
        {
          in: [
            { var: "zipCode" },
            [
              "30004",
              "30005",
              "30009",
              "30022",
              "30024",
              "30030",
              "30040",
              "30041",
              "30062",
              "30066",
              "30067",
              "30068",
              "30075",
              "30076",
              "30092",
              "30097",
              "30269",
              "30305",
              "30306",
              "30307",
              "30308",
              "30309",
              "30319",
              "30327",
              "30328",
              "30338",
              "30339",
              "30342",
              "30345",
              "30350",
              "30363",
              "35213",
              "35223",
              "35242",
              "35243",
              "35244",
              "35406",
              "28801",
              "28803",
              "28804",
              "28805",
              "28806",
              "29607",
              "29609",
              "29642",
              "29644",
              "29650",
              "29651",
              "29687",
              "29690",
              "31901",
              "31902",
              "31903",
              "31904",
              "31906",
              "31907",
              "31908",
              "31909",
              "31914",
              "31917",
              "31993",
              "31997",
              "31998",
            ],
          ],
        },
        { ">=": [{ var: "estimatedHomeValue" }, 600000] },
      ],
    }),
    meta: 'meta3',
    oneView: 'oneView3',
  },
  {
    advertiser: 'Hollywood Promotions',
    status: false,
    tags: [{ title: 'Education' }, { title: 'Learning' }],
    rebuild: 4,
    rebuildUnit: 'weeks',
    dataSource: 'Custom GeoFrames',
    dataFilter: JSONify({
      and: [
        {
          in: [
            { var: "ESQID" },
            [
              "EF~06491",
              "EF~06492",
              "EF~06993",
              "EF~06994",
              "EF~32577",
              "EF~32578",
              "EF~32934",
              "EF~32935",
              "EF~32936",
              "EF~32937",
              "EF~32938",
              "EF~32939",
              "EF~32940",
              "EF~32941",
            ],
          ],
        },
      ],
    }),
    xandr: 'xandr4',
  },
];
