# This file is automatically generated by Keystone, do not modify it manually.
# Modify your Keystone config when you want to change this.

type User {
  id: ID!
  name: String
  email: String
  password: PasswordState
  tenants(where: TenantWhereInput! = {}, orderBy: [TenantOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TenantWhereUniqueInput): [Tenant!]
}

type PasswordState {
  isSet: Boolean!
}

input UserWhereUniqueInput {
  id: ID
  email: String
}

input UserWhereInput {
  AND: [UserWhereInput!]
  OR: [UserWhereInput!]
  NOT: [UserWhereInput!]
  id: IDFilter
  name: StringFilter
  email: StringFilter
  password: PasswordFilter
}

input IDFilter {
  equals: ID
  in: [ID!]
  notIn: [ID!]
  lt: ID
  lte: ID
  gt: ID
  gte: ID
  not: IDFilter
}

input StringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input NestedStringFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: NestedStringFilter
}

input PasswordFilter {
  isSet: Boolean!
}

input UserOrderByInput {
  id: OrderDirection
  name: OrderDirection
  email: OrderDirection
}

enum OrderDirection {
  asc
  desc
}

input UserUpdateInput {
  name: String
  email: String
  password: String
  tenants: JSON
}

input UserUpdateArgs {
  where: UserWhereUniqueInput!
  data: UserUpdateInput!
}

input UserCreateInput {
  name: String
  email: String
  password: String
  tenants: JSON
}

type Permission {
  id: ID!
  tenant: Tenant
  delegates(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  delegatesCount(where: UserWhereInput! = {}): Int
  operation: PermissionOperationType
}

enum PermissionOperationType {
  C
  R
  U
  D
}

input PermissionWhereUniqueInput {
  id: ID
}

input PermissionWhereInput {
  AND: [PermissionWhereInput!]
  OR: [PermissionWhereInput!]
  NOT: [PermissionWhereInput!]
  id: IDFilter
  tenant: TenantWhereInput
  delegates: UserManyRelationFilter
  operation: PermissionOperationTypeNullableFilter
}

input UserManyRelationFilter {
  every: UserWhereInput
  some: UserWhereInput
  none: UserWhereInput
}

input PermissionOperationTypeNullableFilter {
  equals: PermissionOperationType
  in: [PermissionOperationType!]
  notIn: [PermissionOperationType!]
  not: PermissionOperationTypeNullableFilter
}

input PermissionOrderByInput {
  id: OrderDirection
  operation: OrderDirection
}

input PermissionUpdateInput {
  tenant: TenantRelateToOneForUpdateInput
  delegates: UserRelateToManyForUpdateInput
  operation: PermissionOperationType
}

input TenantRelateToOneForUpdateInput {
  create: TenantCreateInput
  connect: TenantWhereUniqueInput
  disconnect: Boolean
}

input UserRelateToManyForUpdateInput {
  disconnect: [UserWhereUniqueInput!]
  set: [UserWhereUniqueInput!]
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

input PermissionUpdateArgs {
  where: PermissionWhereUniqueInput!
  data: PermissionUpdateInput!
}

input PermissionCreateInput {
  tenant: TenantRelateToOneForCreateInput
  delegates: UserRelateToManyForCreateInput
  operation: PermissionOperationType
}

input TenantRelateToOneForCreateInput {
  create: TenantCreateInput
  connect: TenantWhereUniqueInput
}

input UserRelateToManyForCreateInput {
  create: [UserCreateInput!]
  connect: [UserWhereUniqueInput!]
}

type Tenant {
  id: ID!
  title: String
  parent: Tenant
  children(where: TenantWhereInput! = {}, orderBy: [TenantOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TenantWhereUniqueInput): [Tenant!]
  childrenCount(where: TenantWhereInput! = {}): Int
  ancestors(where: TenantWhereInput! = {}, orderBy: [TenantOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TenantWhereUniqueInput): [Tenant!]
  descendants(where: TenantWhereInput! = {}, orderBy: [TenantOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TenantWhereUniqueInput): [Tenant!]
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
}

input TenantWhereUniqueInput {
  id: ID
  title: String
}

input TenantWhereInput {
  AND: [TenantWhereInput!]
  OR: [TenantWhereInput!]
  NOT: [TenantWhereInput!]
  id: IDFilter
  title: StringFilter
  parent: TenantWhereInput
  children: TenantManyRelationFilter
}

input TenantManyRelationFilter {
  every: TenantWhereInput
  some: TenantWhereInput
  none: TenantWhereInput
}

input TenantOrderByInput {
  id: OrderDirection
  title: OrderDirection
}

input TenantUpdateInput {
  title: String
  parent: TenantRelateToOneForUpdateInput
  children: TenantRelateToManyForUpdateInput
  ancestors: JSON
  descendants: JSON
  users: JSON
}

input TenantRelateToManyForUpdateInput {
  disconnect: [TenantWhereUniqueInput!]
  set: [TenantWhereUniqueInput!]
  create: [TenantCreateInput!]
  connect: [TenantWhereUniqueInput!]
}

input TenantUpdateArgs {
  where: TenantWhereUniqueInput!
  data: TenantUpdateInput!
}

input TenantCreateInput {
  title: String
  parent: TenantRelateToOneForCreateInput
  children: TenantRelateToManyForCreateInput
  ancestors: JSON
  descendants: JSON
  users: JSON
}

input TenantRelateToManyForCreateInput {
  create: [TenantCreateInput!]
  connect: [TenantWhereUniqueInput!]
}

type Tag {
  id: ID!
  title: String
  color: String
}

input TagWhereUniqueInput {
  id: ID
  title: String
}

input TagWhereInput {
  AND: [TagWhereInput!]
  OR: [TagWhereInput!]
  NOT: [TagWhereInput!]
  id: IDFilter
  title: StringFilter
  color: StringFilter
}

input TagOrderByInput {
  id: OrderDirection
  title: OrderDirection
  color: OrderDirection
}

input TagUpdateInput {
  title: String
  color: String
}

input TagUpdateArgs {
  where: TagWhereUniqueInput!
  data: TagUpdateInput!
}

input TagCreateInput {
  title: String
  color: String
}

type Advertiser {
  id: ID!
  title: String
  tenant: Tenant
  meta: String
  oneView: String
  xandr: String
}

input AdvertiserWhereUniqueInput {
  id: ID
  title: String
}

input AdvertiserWhereInput {
  AND: [AdvertiserWhereInput!]
  OR: [AdvertiserWhereInput!]
  NOT: [AdvertiserWhereInput!]
  id: IDFilter
  title: StringFilter
  tenant: TenantWhereInput
  meta: StringNullableFilter
  oneView: StringNullableFilter
  xandr: StringNullableFilter
}

input StringNullableFilter {
  equals: String
  in: [String!]
  notIn: [String!]
  lt: String
  lte: String
  gt: String
  gte: String
  contains: String
  startsWith: String
  endsWith: String
  not: StringNullableFilter
}

input AdvertiserOrderByInput {
  id: OrderDirection
  title: OrderDirection
  meta: OrderDirection
  oneView: OrderDirection
  xandr: OrderDirection
}

input AdvertiserUpdateInput {
  title: String
  tenant: TenantRelateToOneForUpdateInput
  meta: String
  oneView: String
  xandr: String
}

input AdvertiserUpdateArgs {
  where: AdvertiserWhereUniqueInput!
  data: AdvertiserUpdateInput!
}

input AdvertiserCreateInput {
  title: String
  tenant: TenantRelateToOneForCreateInput
  meta: String
  oneView: String
  xandr: String
}

type TargetingDataSource {
  id: ID!
  dataType: TargetingDataSourceDataTypeType
  title: String
  filtering: String
}

enum TargetingDataSourceDataTypeType {
  addresses
  device_ids
  polygons
}

input TargetingDataSourceWhereUniqueInput {
  id: ID
  title: String
}

input TargetingDataSourceWhereInput {
  AND: [TargetingDataSourceWhereInput!]
  OR: [TargetingDataSourceWhereInput!]
  NOT: [TargetingDataSourceWhereInput!]
  id: IDFilter
  dataType: TargetingDataSourceDataTypeTypeNullableFilter
  title: StringFilter
  filtering: StringFilter
}

input TargetingDataSourceDataTypeTypeNullableFilter {
  equals: TargetingDataSourceDataTypeType
  in: [TargetingDataSourceDataTypeType!]
  notIn: [TargetingDataSourceDataTypeType!]
  not: TargetingDataSourceDataTypeTypeNullableFilter
}

input TargetingDataSourceOrderByInput {
  id: OrderDirection
  dataType: OrderDirection
  title: OrderDirection
  filtering: OrderDirection
}

input TargetingDataSourceUpdateInput {
  dataType: TargetingDataSourceDataTypeType
  title: String
  filtering: String
}

input TargetingDataSourceUpdateArgs {
  where: TargetingDataSourceWhereUniqueInput!
  data: TargetingDataSourceUpdateInput!
}

input TargetingDataSourceCreateInput {
  dataType: TargetingDataSourceDataTypeType
  title: String
  filtering: String
}

type TargetingGeoFrame {
  id: ID!
  ESQID: String
  title: String
  polygon: JSON
  street: String
  city: String
  state: String
  zipCode: String
}

input TargetingGeoFrameWhereUniqueInput {
  id: ID
}

input TargetingGeoFrameWhereInput {
  AND: [TargetingGeoFrameWhereInput!]
  OR: [TargetingGeoFrameWhereInput!]
  NOT: [TargetingGeoFrameWhereInput!]
  id: IDFilter
  ESQID: StringFilter
  title: StringFilter
  street: StringFilter
  city: StringFilter
  state: StringFilter
  zipCode: StringFilter
}

input TargetingGeoFrameOrderByInput {
  id: OrderDirection
  ESQID: OrderDirection
  title: OrderDirection
  street: OrderDirection
  city: OrderDirection
  state: OrderDirection
  zipCode: OrderDirection
}

input TargetingGeoFrameUpdateInput {
  ESQID: String
  title: String
  polygon: JSON
  street: String
  city: String
  state: String
  zipCode: String
}

input TargetingGeoFrameUpdateArgs {
  where: TargetingGeoFrameWhereUniqueInput!
  data: TargetingGeoFrameUpdateInput!
}

input TargetingGeoFrameCreateInput {
  ESQID: String
  title: String
  polygon: JSON
  street: String
  city: String
  state: String
  zipCode: String
}

type TargetingProcessingStep {
  id: ID!
  outputType: TargetingProcessingStepOutputTypeType
  customCoding: String
}

enum TargetingProcessingStepOutputTypeType {
  addresses
  device_ids
  polygons
}

input TargetingProcessingStepWhereUniqueInput {
  id: ID
}

input TargetingProcessingStepWhereInput {
  AND: [TargetingProcessingStepWhereInput!]
  OR: [TargetingProcessingStepWhereInput!]
  NOT: [TargetingProcessingStepWhereInput!]
  id: IDFilter
  outputType: TargetingProcessingStepOutputTypeTypeNullableFilter
  customCoding: StringFilter
}

input TargetingProcessingStepOutputTypeTypeNullableFilter {
  equals: TargetingProcessingStepOutputTypeType
  in: [TargetingProcessingStepOutputTypeType!]
  notIn: [TargetingProcessingStepOutputTypeType!]
  not: TargetingProcessingStepOutputTypeTypeNullableFilter
}

input TargetingProcessingStepOrderByInput {
  id: OrderDirection
  outputType: OrderDirection
  customCoding: OrderDirection
}

input TargetingProcessingStepUpdateInput {
  outputType: TargetingProcessingStepOutputTypeType
  customCoding: String
}

input TargetingProcessingStepUpdateArgs {
  where: TargetingProcessingStepWhereUniqueInput!
  data: TargetingProcessingStepUpdateInput!
}

input TargetingProcessingStepCreateInput {
  outputType: TargetingProcessingStepOutputTypeType
  customCoding: String
}

type Audience {
  id: ID!
  advertiser: Advertiser
  status: Boolean
  tags(where: TagWhereInput! = {}, orderBy: [TagOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TagWhereUniqueInput): [Tag!]
  rebuild: Int
  rebuildUnit: AudienceRebuildUnitType
  TTL_Length: Int
  TTL_Unit: AudienceTTLUnitType
  dataSource: TargetingDataSource
  dataFilter: String
  processes(where: TargetingProcessingStepWhereInput! = {}, orderBy: [TargetingProcessingStepOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TargetingProcessingStepWhereUniqueInput): [TargetingProcessingStep!]
  meta: String
  oneView: String
  xandr: String
}

enum AudienceRebuildUnitType {
  days
  weeks
  months
}

enum AudienceTTLUnitType {
  days
  weeks
  months
}

input AudienceWhereUniqueInput {
  id: ID
}

input AudienceWhereInput {
  AND: [AudienceWhereInput!]
  OR: [AudienceWhereInput!]
  NOT: [AudienceWhereInput!]
  id: IDFilter
  advertiser: AdvertiserWhereInput
  status: BooleanFilter
  rebuild: IntNullableFilter
  rebuildUnit: AudienceRebuildUnitTypeNullableFilter
  TTL_Length: IntNullableFilter
  TTL_Unit: AudienceTTLUnitTypeNullableFilter
  dataSource: TargetingDataSourceWhereInput
  dataFilter: StringNullableFilter
  meta: StringNullableFilter
  oneView: StringNullableFilter
  xandr: StringNullableFilter
}

input BooleanFilter {
  equals: Boolean
  not: BooleanFilter
}

input IntNullableFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntNullableFilter
}

input AudienceRebuildUnitTypeNullableFilter {
  equals: AudienceRebuildUnitType
  in: [AudienceRebuildUnitType!]
  notIn: [AudienceRebuildUnitType!]
  not: AudienceRebuildUnitTypeNullableFilter
}

input AudienceTTLUnitTypeNullableFilter {
  equals: AudienceTTLUnitType
  in: [AudienceTTLUnitType!]
  notIn: [AudienceTTLUnitType!]
  not: AudienceTTLUnitTypeNullableFilter
}

input AudienceOrderByInput {
  id: OrderDirection
  status: OrderDirection
  rebuild: OrderDirection
  rebuildUnit: OrderDirection
  TTL_Length: OrderDirection
  TTL_Unit: OrderDirection
  dataFilter: OrderDirection
  meta: OrderDirection
  oneView: OrderDirection
  xandr: OrderDirection
}

input AudienceUpdateInput {
  advertiser: AdvertiserRelateToOneForUpdateInput
  status: Boolean
  tags: JSON
  rebuild: Int
  rebuildUnit: AudienceRebuildUnitType
  TTL_Length: Int
  TTL_Unit: AudienceTTLUnitType
  dataSource: TargetingDataSourceRelateToOneForUpdateInput
  dataFilter: String
  processes: JSON
  meta: String
  oneView: String
  xandr: String
}

input AdvertiserRelateToOneForUpdateInput {
  create: AdvertiserCreateInput
  connect: AdvertiserWhereUniqueInput
  disconnect: Boolean
}

input TargetingDataSourceRelateToOneForUpdateInput {
  create: TargetingDataSourceCreateInput
  connect: TargetingDataSourceWhereUniqueInput
  disconnect: Boolean
}

input AudienceUpdateArgs {
  where: AudienceWhereUniqueInput!
  data: AudienceUpdateInput!
}

input AudienceCreateInput {
  advertiser: AdvertiserRelateToOneForCreateInput
  status: Boolean
  tags: JSON
  rebuild: Int
  rebuildUnit: AudienceRebuildUnitType
  TTL_Length: Int
  TTL_Unit: AudienceTTLUnitType
  dataSource: TargetingDataSourceRelateToOneForCreateInput
  dataFilter: String
  processes: JSON
  meta: String
  oneView: String
  xandr: String
}

input AdvertiserRelateToOneForCreateInput {
  create: AdvertiserCreateInput
  connect: AdvertiserWhereUniqueInput
}

input TargetingDataSourceRelateToOneForCreateInput {
  create: TargetingDataSourceCreateInput
  connect: TargetingDataSourceWhereUniqueInput
}

type AudienceTag {
  id: ID!
  audience: Audience
  tag: Tag
  order: Int
}

input AudienceTagWhereUniqueInput {
  id: ID
}

input AudienceTagWhereInput {
  AND: [AudienceTagWhereInput!]
  OR: [AudienceTagWhereInput!]
  NOT: [AudienceTagWhereInput!]
  id: IDFilter
  audience: AudienceWhereInput
  tag: TagWhereInput
  order: IntFilter
}

input IntFilter {
  equals: Int
  in: [Int!]
  notIn: [Int!]
  lt: Int
  lte: Int
  gt: Int
  gte: Int
  not: IntFilter
}

input AudienceTagOrderByInput {
  id: OrderDirection
  order: OrderDirection
}

input AudienceTagUpdateInput {
  audience: AudienceRelateToOneForUpdateInput
  tag: TagRelateToOneForUpdateInput
  order: Int
}

input AudienceRelateToOneForUpdateInput {
  create: AudienceCreateInput
  connect: AudienceWhereUniqueInput
  disconnect: Boolean
}

input TagRelateToOneForUpdateInput {
  create: TagCreateInput
  connect: TagWhereUniqueInput
  disconnect: Boolean
}

input AudienceTagUpdateArgs {
  where: AudienceTagWhereUniqueInput!
  data: AudienceTagUpdateInput!
}

input AudienceTagCreateInput {
  audience: AudienceRelateToOneForCreateInput
  tag: TagRelateToOneForCreateInput
  order: Int
}

input AudienceRelateToOneForCreateInput {
  create: AudienceCreateInput
  connect: AudienceWhereUniqueInput
}

input TagRelateToOneForCreateInput {
  create: TagCreateInput
  connect: TagWhereUniqueInput
}

type AudienceProcess {
  id: ID!
  audience: Audience
  process: TargetingProcessingStep
  order: Int
}

input AudienceProcessWhereUniqueInput {
  id: ID
}

input AudienceProcessWhereInput {
  AND: [AudienceProcessWhereInput!]
  OR: [AudienceProcessWhereInput!]
  NOT: [AudienceProcessWhereInput!]
  id: IDFilter
  audience: AudienceWhereInput
  process: TargetingProcessingStepWhereInput
  order: IntFilter
}

input AudienceProcessOrderByInput {
  id: OrderDirection
  order: OrderDirection
}

input AudienceProcessUpdateInput {
  audience: AudienceRelateToOneForUpdateInput
  process: TargetingProcessingStepRelateToOneForUpdateInput
  order: Int
}

input TargetingProcessingStepRelateToOneForUpdateInput {
  create: TargetingProcessingStepCreateInput
  connect: TargetingProcessingStepWhereUniqueInput
  disconnect: Boolean
}

input AudienceProcessUpdateArgs {
  where: AudienceProcessWhereUniqueInput!
  data: AudienceProcessUpdateInput!
}

input AudienceProcessCreateInput {
  audience: AudienceRelateToOneForCreateInput
  process: TargetingProcessingStepRelateToOneForCreateInput
  order: Int
}

input TargetingProcessingStepRelateToOneForCreateInput {
  create: TargetingProcessingStepCreateInput
  connect: TargetingProcessingStepWhereUniqueInput
}

"""
The `JSON` scalar type represents JSON values as specified by [ECMA-404](http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf).
"""
scalar JSON @specifiedBy(url: "http://www.ecma-international.org/publications/files/ECMA-ST/ECMA-404.pdf")

type Mutation {
  createUser(data: UserCreateInput!): User
  createUsers(data: [UserCreateInput!]!): [User]
  updateUser(where: UserWhereUniqueInput!, data: UserUpdateInput!): User
  updateUsers(data: [UserUpdateArgs!]!): [User]
  deleteUser(where: UserWhereUniqueInput!): User
  deleteUsers(where: [UserWhereUniqueInput!]!): [User]
  createPermission(data: PermissionCreateInput!): Permission
  createPermissions(data: [PermissionCreateInput!]!): [Permission]
  updatePermission(where: PermissionWhereUniqueInput!, data: PermissionUpdateInput!): Permission
  updatePermissions(data: [PermissionUpdateArgs!]!): [Permission]
  deletePermission(where: PermissionWhereUniqueInput!): Permission
  deletePermissions(where: [PermissionWhereUniqueInput!]!): [Permission]
  createTenant(data: TenantCreateInput!): Tenant
  createTenants(data: [TenantCreateInput!]!): [Tenant]
  updateTenant(where: TenantWhereUniqueInput!, data: TenantUpdateInput!): Tenant
  updateTenants(data: [TenantUpdateArgs!]!): [Tenant]
  deleteTenant(where: TenantWhereUniqueInput!): Tenant
  deleteTenants(where: [TenantWhereUniqueInput!]!): [Tenant]
  createTag(data: TagCreateInput!): Tag
  createTags(data: [TagCreateInput!]!): [Tag]
  updateTag(where: TagWhereUniqueInput!, data: TagUpdateInput!): Tag
  updateTags(data: [TagUpdateArgs!]!): [Tag]
  deleteTag(where: TagWhereUniqueInput!): Tag
  deleteTags(where: [TagWhereUniqueInput!]!): [Tag]
  createAdvertiser(data: AdvertiserCreateInput!): Advertiser
  createAdvertisers(data: [AdvertiserCreateInput!]!): [Advertiser]
  updateAdvertiser(where: AdvertiserWhereUniqueInput!, data: AdvertiserUpdateInput!): Advertiser
  updateAdvertisers(data: [AdvertiserUpdateArgs!]!): [Advertiser]
  deleteAdvertiser(where: AdvertiserWhereUniqueInput!): Advertiser
  deleteAdvertisers(where: [AdvertiserWhereUniqueInput!]!): [Advertiser]
  createTargetingDataSource(data: TargetingDataSourceCreateInput!): TargetingDataSource
  createTargetingDataSources(data: [TargetingDataSourceCreateInput!]!): [TargetingDataSource]
  updateTargetingDataSource(where: TargetingDataSourceWhereUniqueInput!, data: TargetingDataSourceUpdateInput!): TargetingDataSource
  updateTargetingDataSources(data: [TargetingDataSourceUpdateArgs!]!): [TargetingDataSource]
  deleteTargetingDataSource(where: TargetingDataSourceWhereUniqueInput!): TargetingDataSource
  deleteTargetingDataSources(where: [TargetingDataSourceWhereUniqueInput!]!): [TargetingDataSource]
  createTargetingGeoFrame(data: TargetingGeoFrameCreateInput!): TargetingGeoFrame
  createTargetingGeoFrames(data: [TargetingGeoFrameCreateInput!]!): [TargetingGeoFrame]
  updateTargetingGeoFrame(where: TargetingGeoFrameWhereUniqueInput!, data: TargetingGeoFrameUpdateInput!): TargetingGeoFrame
  updateTargetingGeoFrames(data: [TargetingGeoFrameUpdateArgs!]!): [TargetingGeoFrame]
  deleteTargetingGeoFrame(where: TargetingGeoFrameWhereUniqueInput!): TargetingGeoFrame
  deleteTargetingGeoFrames(where: [TargetingGeoFrameWhereUniqueInput!]!): [TargetingGeoFrame]
  createTargetingProcessingStep(data: TargetingProcessingStepCreateInput!): TargetingProcessingStep
  createTargetingProcessingSteps(data: [TargetingProcessingStepCreateInput!]!): [TargetingProcessingStep]
  updateTargetingProcessingStep(where: TargetingProcessingStepWhereUniqueInput!, data: TargetingProcessingStepUpdateInput!): TargetingProcessingStep
  updateTargetingProcessingSteps(data: [TargetingProcessingStepUpdateArgs!]!): [TargetingProcessingStep]
  deleteTargetingProcessingStep(where: TargetingProcessingStepWhereUniqueInput!): TargetingProcessingStep
  deleteTargetingProcessingSteps(where: [TargetingProcessingStepWhereUniqueInput!]!): [TargetingProcessingStep]
  createAudience(data: AudienceCreateInput!): Audience
  createAudiences(data: [AudienceCreateInput!]!): [Audience]
  updateAudience(where: AudienceWhereUniqueInput!, data: AudienceUpdateInput!): Audience
  updateAudiences(data: [AudienceUpdateArgs!]!): [Audience]
  deleteAudience(where: AudienceWhereUniqueInput!): Audience
  deleteAudiences(where: [AudienceWhereUniqueInput!]!): [Audience]
  createAudienceTag(data: AudienceTagCreateInput!): AudienceTag
  createAudienceTags(data: [AudienceTagCreateInput!]!): [AudienceTag]
  updateAudienceTag(where: AudienceTagWhereUniqueInput!, data: AudienceTagUpdateInput!): AudienceTag
  updateAudienceTags(data: [AudienceTagUpdateArgs!]!): [AudienceTag]
  deleteAudienceTag(where: AudienceTagWhereUniqueInput!): AudienceTag
  deleteAudienceTags(where: [AudienceTagWhereUniqueInput!]!): [AudienceTag]
  createAudienceProcess(data: AudienceProcessCreateInput!): AudienceProcess
  createAudienceProcesses(data: [AudienceProcessCreateInput!]!): [AudienceProcess]
  updateAudienceProcess(where: AudienceProcessWhereUniqueInput!, data: AudienceProcessUpdateInput!): AudienceProcess
  updateAudienceProcesses(data: [AudienceProcessUpdateArgs!]!): [AudienceProcess]
  deleteAudienceProcess(where: AudienceProcessWhereUniqueInput!): AudienceProcess
  deleteAudienceProcesses(where: [AudienceProcessWhereUniqueInput!]!): [AudienceProcess]
  endSession: Boolean!
  authenticateUserWithPassword(email: String!, password: String!): UserAuthenticationWithPasswordResult
  createInitialUser(data: CreateInitialUserInput!): UserAuthenticationWithPasswordSuccess!
}

union UserAuthenticationWithPasswordResult = UserAuthenticationWithPasswordSuccess | UserAuthenticationWithPasswordFailure

type UserAuthenticationWithPasswordSuccess {
  sessionToken: String!
  item: User!
}

type UserAuthenticationWithPasswordFailure {
  message: String!
}

input CreateInitialUserInput {
  name: String
  email: String
  password: String
}

type Query {
  users(where: UserWhereInput! = {}, orderBy: [UserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: UserWhereUniqueInput): [User!]
  user(where: UserWhereUniqueInput!): User
  usersCount(where: UserWhereInput! = {}): Int
  permissions(where: PermissionWhereInput! = {}, orderBy: [PermissionOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: PermissionWhereUniqueInput): [Permission!]
  permission(where: PermissionWhereUniqueInput!): Permission
  permissionsCount(where: PermissionWhereInput! = {}): Int
  tenants(where: TenantWhereInput! = {}, orderBy: [TenantOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TenantWhereUniqueInput): [Tenant!]
  tenant(where: TenantWhereUniqueInput!): Tenant
  tenantsCount(where: TenantWhereInput! = {}): Int
  tags(where: TagWhereInput! = {}, orderBy: [TagOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TagWhereUniqueInput): [Tag!]
  tag(where: TagWhereUniqueInput!): Tag
  tagsCount(where: TagWhereInput! = {}): Int
  advertisers(where: AdvertiserWhereInput! = {}, orderBy: [AdvertiserOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AdvertiserWhereUniqueInput): [Advertiser!]
  advertiser(where: AdvertiserWhereUniqueInput!): Advertiser
  advertisersCount(where: AdvertiserWhereInput! = {}): Int
  targetingDataSources(where: TargetingDataSourceWhereInput! = {}, orderBy: [TargetingDataSourceOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TargetingDataSourceWhereUniqueInput): [TargetingDataSource!]
  targetingDataSource(where: TargetingDataSourceWhereUniqueInput!): TargetingDataSource
  targetingDataSourcesCount(where: TargetingDataSourceWhereInput! = {}): Int
  targetingGeoFrames(where: TargetingGeoFrameWhereInput! = {}, orderBy: [TargetingGeoFrameOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TargetingGeoFrameWhereUniqueInput): [TargetingGeoFrame!]
  targetingGeoFrame(where: TargetingGeoFrameWhereUniqueInput!): TargetingGeoFrame
  targetingGeoFramesCount(where: TargetingGeoFrameWhereInput! = {}): Int
  targetingProcessingSteps(where: TargetingProcessingStepWhereInput! = {}, orderBy: [TargetingProcessingStepOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: TargetingProcessingStepWhereUniqueInput): [TargetingProcessingStep!]
  targetingProcessingStep(where: TargetingProcessingStepWhereUniqueInput!): TargetingProcessingStep
  targetingProcessingStepsCount(where: TargetingProcessingStepWhereInput! = {}): Int
  audiences(where: AudienceWhereInput! = {}, orderBy: [AudienceOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AudienceWhereUniqueInput): [Audience!]
  audience(where: AudienceWhereUniqueInput!): Audience
  audiencesCount(where: AudienceWhereInput! = {}): Int
  audienceTags(where: AudienceTagWhereInput! = {}, orderBy: [AudienceTagOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AudienceTagWhereUniqueInput): [AudienceTag!]
  audienceTag(where: AudienceTagWhereUniqueInput!): AudienceTag
  audienceTagsCount(where: AudienceTagWhereInput! = {}): Int
  audienceProcesses(where: AudienceProcessWhereInput! = {}, orderBy: [AudienceProcessOrderByInput!]! = [], take: Int, skip: Int! = 0, cursor: AudienceProcessWhereUniqueInput): [AudienceProcess!]
  audienceProcess(where: AudienceProcessWhereUniqueInput!): AudienceProcess
  audienceProcessesCount(where: AudienceProcessWhereInput! = {}): Int
  keystone: KeystoneMeta!
  authenticatedItem: AuthenticatedItem
}

union AuthenticatedItem = User

type KeystoneMeta {
  adminMeta: KeystoneAdminMeta!
}

type KeystoneAdminMeta {
  lists: [KeystoneAdminUIListMeta!]!
  list(key: String!): KeystoneAdminUIListMeta
}

type KeystoneAdminUIListMeta {
  key: String!
  itemQueryName: String!
  listQueryName: String!
  hideCreate: Boolean!
  hideDelete: Boolean!
  path: String!
  label: String!
  singular: String!
  plural: String!
  description: String
  initialColumns: [String!]!
  pageSize: Int!
  labelField: String!
  fields: [KeystoneAdminUIFieldMeta!]!
  groups: [KeystoneAdminUIFieldGroupMeta!]!
  initialSort: KeystoneAdminUISort
  isHidden: Boolean!
  isSingleton: Boolean!
}

type KeystoneAdminUIFieldMeta {
  path: String!
  label: String!
  description: String
  isOrderable: Boolean!
  isFilterable: Boolean!
  isNonNull: [KeystoneAdminUIFieldMetaIsNonNull!]
  fieldMeta: JSON
  viewsIndex: Int!
  customViewsIndex: Int
  createView: KeystoneAdminUIFieldMetaCreateView!
  listView: KeystoneAdminUIFieldMetaListView!
  itemView(id: ID): KeystoneAdminUIFieldMetaItemView
  search: QueryMode
}

enum KeystoneAdminUIFieldMetaIsNonNull {
  read
  create
  update
}

type KeystoneAdminUIFieldMetaCreateView {
  fieldMode: KeystoneAdminUIFieldMetaCreateViewFieldMode!
}

enum KeystoneAdminUIFieldMetaCreateViewFieldMode {
  edit
  hidden
}

type KeystoneAdminUIFieldMetaListView {
  fieldMode: KeystoneAdminUIFieldMetaListViewFieldMode!
}

enum KeystoneAdminUIFieldMetaListViewFieldMode {
  read
  hidden
}

type KeystoneAdminUIFieldMetaItemView {
  fieldMode: KeystoneAdminUIFieldMetaItemViewFieldMode
  fieldPosition: KeystoneAdminUIFieldMetaItemViewFieldPosition
}

enum KeystoneAdminUIFieldMetaItemViewFieldMode {
  edit
  read
  hidden
}

enum KeystoneAdminUIFieldMetaItemViewFieldPosition {
  form
  sidebar
}

enum QueryMode {
  default
  insensitive
}

type KeystoneAdminUIFieldGroupMeta {
  label: String!
  description: String
  fields: [KeystoneAdminUIFieldMeta!]!
}

type KeystoneAdminUISort {
  field: String!
  direction: KeystoneAdminUISortDirection!
}

enum KeystoneAdminUISortDirection {
  ASC
  DESC
}
